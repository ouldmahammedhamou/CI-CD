name: CI Pipeline
#### test 1
on:
  push:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        name: Checkout du code source

      - name: Installation de Kind
        uses: helm/kind-action@v1.8.0
        with:
          config: kind-config.yaml
          cluster_name: kind

      - name: Construire l'image Docker
        run: |
          docker build -t ouldmahammed/hello-world-node:${{ github.sha }} .

      - name: Connexion à Docker Hub
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u ouldmahammed --password-stdin

      - name: Pousser l'image Docker
        run: |
          docker tag ouldmahammed/hello-world-node:${{ github.sha }} ouldmahammed/hello-world-node:latest
          docker push ouldmahammed/hello-world-node:latest

      - name: Vérifier que le cluster est prêt
        run: |
          kubectl cluster-info
          kubectl get nodes

      - name: Charger l'image dans Kind
        run: |
          kind load docker-image ouldmahammed/hello-world-node:latest --name kind

      - name: Déployer sur Kind
        run: |
          kubectl create deployment hello-world-node --image=ouldmahammed/hello-world-node:latest
          kubectl expose deployment hello-world-node --type=LoadBalancer --port=80 --target-port=3000
          kubectl wait --for=condition=available --timeout=300s deployment/hello-world-node

      - name: Vérifier le déploiement
        run: |
          kubectl get pods
          kubectl get services

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Installation de Kind
        uses: helm/kind-action@v1.8.0
        with:
          config: kind-config.yaml
          cluster_name: kind

      - name: Construire l'image Docker localement
        run: |
          docker build -t ouldmahammed/hello-world-node:latest .

      - name: Configurer kubectl
        run: |
          mkdir -p $HOME/.kube
          kind get kubeconfig --name kind > $HOME/.kube/config
          chmod 600 $HOME/.kube/config

      - name: Charger l'image dans Kind
        run: |
          docker pull ouldmahammed/hello-world-node:latest
          kind load docker-image ouldmahammed/hello-world-node:latest --name kind

      - name: Déployer sur Kind
        run: |
          kubectl create deployment hello-world-node --image=ouldmahammed/hello-world-node:latest || true
          kubectl rollout restart deployment hello-world-node
          kubectl expose deployment hello-world-node --type=LoadBalancer --port=80 --target-port=3000 || true
          kubectl wait --for=condition=available --timeout=300s deployment/hello-world-node

      - name: Vérifier le déploiement
        run: |
          kubectl get pods -o wide
          kubectl get services
          kubectl get deployments